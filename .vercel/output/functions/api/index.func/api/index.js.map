{"version":3,"file":"index.ts","sources":["C:\\Users\\Ahmet Hakan Yüce\\Desktop\\Yeni klasör (2)\\api\\index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Vercel deploy entry handler, for serverless deployment\n */\nimport type { VercelRequest, VercelResponse } from '@vercel/node';\nimport express, { type Request, type Response, type NextFunction } from 'express';\nimport cors from 'cors';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcryptjs';\n\n// Types\ninterface User {\n  id: string;\n  username: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  role: 'admin' | 'manager' | 'operator';\n  department: string;\n  phone: string;\n  isActive: boolean;\n  lastLogin: string | null;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface LoginRequest {\n  email: string;\n  password: string;\n}\n\ninterface LoginResponse {\n  token: string;\n  refreshToken: string;\n  user: Omit<User, 'password'>;\n}\n\ninterface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  message?: string;\n}\n\n// Mock Data\nconst users: User[] = [\n  {\n    id: '1',\n    username: 'admin',\n    firstName: 'Admin',\n    lastName: 'User',\n    email: 'admin@example.com',\n    password: 'password123',\n    role: 'admin',\n    department: 'IT',\n    phone: '+90 555 123 4567',\n    isActive: true,\n    lastLogin: new Date().toISOString(),\n    createdAt: new Date('2024-01-01').toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '2',\n    username: 'manager',\n    firstName: 'Manager',\n    lastName: 'User',\n    email: 'manager@example.com',\n    password: 'password123',\n    role: 'manager',\n    department: 'Production',\n    phone: '+90 555 234 5678',\n    isActive: true,\n    lastLogin: new Date().toISOString(),\n    createdAt: new Date('2024-01-01').toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '3',\n    username: 'operator',\n    firstName: 'Operator',\n    lastName: 'User',\n    email: 'operator@example.com',\n    password: 'password123',\n    role: 'operator',\n    department: 'Production',\n    phone: '+90 555 345 6789',\n    isActive: true,\n    lastLogin: new Date().toISOString(),\n    createdAt: new Date('2024-01-01').toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\nconst materials = [\n  {\n    id: '1',\n    code: 'MAT001',\n    name: 'Mermer Blok A1',\n    description: 'Yüksek kalite beyaz mermer blok',\n    category: 'Ham Madde',\n    unit: 'ton',\n    currentStock: 150,\n    minStock: 50,\n    maxStock: 300,\n    unitPrice: 2500,\n    supplier: 'Afyon Mermer A.Ş.',\n    location: 'Depo A-1',\n    lastUpdated: new Date().toISOString()\n  },\n  {\n    id: '2',\n    code: 'MAT002',\n    name: 'Kesme Diski 350mm',\n    description: 'Elmas kesme diski 350mm çap',\n    category: 'Yedek Parça',\n    unit: 'adet',\n    currentStock: 25,\n    minStock: 10,\n    maxStock: 100,\n    unitPrice: 450,\n    supplier: 'Makine Parça Ltd.',\n    location: 'Depo B-2',\n    lastUpdated: new Date().toISOString()\n  }\n];\n\nconst movements = [\n  {\n    id: '1',\n    materialId: '1',\n    materialName: 'Mermer Blok A1',\n    type: 'in' as const,\n    quantity: 50,\n    unit: 'ton',\n    reason: 'Satın Alma',\n    description: 'Yeni sevkiyat',\n    date: new Date().toISOString(),\n    createdBy: 'admin',\n    createdAt: new Date().toISOString()\n  }\n];\n\nconst machines = [\n  {\n    id: '1',\n    code: 'MCH001',\n    name: 'Köprü Kesim Makinesi 1',\n    type: 'Kesim',\n    model: 'BridgeCut Pro 3000',\n    manufacturer: 'StoneTech',\n    status: 'active' as const,\n    location: 'Üretim Hattı A',\n    installDate: '2023-01-15',\n    lastMaintenance: '2024-01-15',\n    nextMaintenance: '2024-04-15',\n    specifications: {\n      maxCuttingWidth: '3200mm',\n      maxCuttingLength: '2000mm',\n      bladeSize: '600mm',\n      motorPower: '15kW'\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\ninterface WorkOrder {\n  id: string;\n  orderNumber: string;\n  title: string;\n  description?: string;\n  status: 'PLANNED' | 'IN_PROGRESS' | 'COMPLETED' | 'CANCELLED';\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  assignedTo?: string;\n  machineId: string;\n  machineName: string;\n  estimatedDuration?: number;\n  materials?: { materialId: string; quantity: number; unit: string }[];\n  createdBy?: string;\n  createdAt: string;\n  updatedAt: string;\n  dueDate?: string;\n  quantity?: number;\n}\n\nconst workOrders: WorkOrder[] = [\n  {\n    id: '1',\n    orderNumber: 'WO-2024-001',\n    title: 'Mermer Plaka Kesimi',\n    description: 'Müşteri siparişi için mermer plaka kesimi',\n    status: 'PLANNED',\n    priority: 'HIGH',\n    assignedTo: 'operator',\n    machineId: '1',\n    machineName: 'Köprü Kesim Makinesi 1',\n    estimatedDuration: 240,\n    quantity: 5,\n    materials: [{ materialId: '1', quantity: 5, unit: 'ton' }],\n    createdBy: 'manager',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '2',\n    orderNumber: 'WO-2024-002',\n    title: 'Granit İşleme',\n    description: 'Granit levha işleme',\n    status: 'IN_PROGRESS',\n    priority: 'MEDIUM',\n    assignedTo: 'operator',\n    machineId: '2',\n    machineName: 'CNC Makinesi',\n    estimatedDuration: 180,\n    quantity: 3,\n    materials: [{ materialId: '2', quantity: 3, unit: 'adet' }],\n    createdBy: 'manager',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '3',\n    orderNumber: 'WO-2024-003',\n    title: 'Mermer Cilalama',\n    description: 'Mermer yüzey cilalama işlemi',\n    status: 'COMPLETED',\n    priority: 'LOW',\n    assignedTo: 'operator',\n    machineId: '3',\n    machineName: 'Cilalama Makinesi',\n    estimatedDuration: 120,\n    quantity: 2,\n    materials: [{ materialId: '3', quantity: 2, unit: 'adet' }],\n    createdBy: 'manager',\n    createdAt: new Date().toISOString(),\n     updatedAt: new Date().toISOString(),\n     dueDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString()\n   }\n ];\n\n// Helper functions\nconst findByEmail = (email: string): User | undefined => {\n  return users.find(user => user.email === email);\n};\n\nconst generateToken = (user: User): string => {\n  return jwt.sign(\n    { id: user.id, email: user.email, role: user.role },\n    'your-secret-key',\n    { expiresIn: '24h' }\n  );\n};\n\nconst generateRefreshToken = (user: User): string => {\n  return jwt.sign(\n    { id: user.id, email: user.email },\n    'your-refresh-secret-key',\n    { expiresIn: '7d' }\n  );\n};\n\nconst verifyToken = (token: string): any => {\n  return jwt.verify(token, 'your-secret-key');\n};\n\nconst authenticateToken = (req: Request, res: Response, next: NextFunction): void => {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader && authHeader.split(' ')[1];\n\n  if (!token) {\n    res.status(401).json({ success: false, error: 'Access token required' });\n    return;\n  }\n\n  try {\n    const decoded = verifyToken(token);\n    const user = findByEmail(decoded.email);\n    if (!user) {\n      res.status(401).json({ success: false, error: 'Invalid token' });\n      return;\n    }\n    req.user = user;\n    next();\n  } catch (error) {\n    res.status(403).json({ success: false, error: 'Invalid or expired token' });\n  }\n};\n\n// Express app setup\nconst app = express();\n\napp.use(cors());\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n// Auth routes\napp.post('/api/auth/login', async (req: Request, res: Response): Promise<void> => {\n  try {\n    const { email, password }: LoginRequest = req.body;\n\n    if (!email || !password) {\n      res.status(400).json({\n        success: false,\n        error: 'Email and password are required'\n      } as ApiResponse);\n      return;\n    }\n\n    const user = findByEmail(email);\n    if (!user) {\n      res.status(401).json({\n        success: false,\n        error: 'Invalid credentials'\n      } as ApiResponse);\n      return;\n    }\n\n    if (!user.isActive) {\n      res.status(401).json({\n        success: false,\n        error: 'Account is inactive'\n      } as ApiResponse);\n      return;\n    }\n\n    const validPassword = password === 'password123';\n    \n    if (!validPassword) {\n      res.status(401).json({\n        success: false,\n        error: 'Invalid credentials'\n      } as ApiResponse);\n      return;\n    }\n\n    const token = generateToken(user);\n    const refreshToken = generateRefreshToken(user);\n\n    const response: LoginResponse = {\n      token,\n      refreshToken,\n      user: {\n        id: user.id,\n        username: user.username,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email,\n        role: user.role,\n        department: user.department,\n        phone: user.phone,\n        isActive: user.isActive,\n        lastLogin: user.lastLogin,\n        createdAt: user.createdAt,\n        updatedAt: user.updatedAt\n      }\n    };\n\n    res.json({\n      success: true,\n      data: response,\n      message: 'Login successful'\n    } as ApiResponse<LoginResponse>);\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'\n    } as ApiResponse);\n  }\n});\n\napp.get('/api/auth/me', authenticateToken, async (req: Request, res: Response): Promise<void> => {\n  try {\n    if (!req.user) {\n      res.status(401).json({\n        success: false,\n        error: 'User not found'\n      } as ApiResponse);\n      return;\n    }\n\n    const { id, firstName, lastName, email, role, phone, isActive, createdAt, updatedAt } = req.user;\n    \n    res.json({\n      success: true,\n      data: { id, firstName, lastName, email, role, phone, isActive, createdAt, updatedAt },\n      message: 'User info retrieved successfully'\n    } as ApiResponse);\n  } catch (error) {\n    console.error('Get user info error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Internal server error'\n    } as ApiResponse);\n  }\n});\n\n// Materials routes\napp.get('/api/materials', (req: Request, res: Response) => {\n  res.json({ success: true, data: materials });\n});\n\napp.get('/api/materials/:id', (req: Request, res: Response) => {\n  const material = materials.find(m => m.id === req.params.id);\n  if (!material) {\n    return res.status(404).json({ success: false, error: 'Material not found' });\n  }\n  res.json({ success: true, data: material });\n});\n\napp.post('/api/materials', (req: Request, res: Response) => {\n  const newMaterial = {\n    id: String(materials.length + 1),\n    ...req.body,\n    lastUpdated: new Date().toISOString()\n  };\n  materials.push(newMaterial);\n  res.json({ success: true, data: newMaterial });\n});\n\napp.put('/api/materials/:id', (req: Request, res: Response) => {\n  const index = materials.findIndex(m => m.id === req.params.id);\n  if (index === -1) {\n    return res.status(404).json({ success: false, error: 'Material not found' });\n  }\n  materials[index] = { ...materials[index], ...req.body, lastUpdated: new Date().toISOString() };\n  res.json({ success: true, data: materials[index] });\n});\n\napp.delete('/api/materials/:id', (req: Request, res: Response) => {\n  const index = materials.findIndex(m => m.id === req.params.id);\n  if (index === -1) {\n    return res.status(404).json({ success: false, error: 'Material not found' });\n  }\n  materials.splice(index, 1);\n  res.json({ success: true, message: 'Material deleted' });\n});\n\n// Movements routes\napp.get('/api/movements', (req: Request, res: Response) => {\n  res.json({ success: true, data: movements });\n});\n\napp.post('/api/movements', (req: Request, res: Response) => {\n  const newMovement = {\n    id: String(movements.length + 1),\n    ...req.body,\n    createdAt: new Date().toISOString()\n  };\n  movements.push(newMovement);\n  res.json({ success: true, data: newMovement });\n});\n\n// Machines routes\napp.get('/api/machines', (req: Request, res: Response) => {\n  res.json({ success: true, data: machines });\n});\n\napp.get('/api/machines/:id', (req: Request, res: Response) => {\n  const machine = machines.find(m => m.id === req.params.id);\n  if (!machine) {\n    return res.status(404).json({ success: false, error: 'Machine not found' });\n  }\n  res.json({ success: true, data: machine });\n});\n\napp.post('/api/machines', (req: Request, res: Response) => {\n  const newMachine = {\n    id: String(machines.length + 1),\n    ...req.body,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  };\n  machines.push(newMachine);\n  res.json({ success: true, data: newMachine });\n});\n\napp.put('/api/machines/:id', (req: Request, res: Response) => {\n  const index = machines.findIndex(m => m.id === req.params.id);\n  if (index === -1) {\n    return res.status(404).json({ success: false, error: 'Machine not found' });\n  }\n  machines[index] = { ...machines[index], ...req.body, updatedAt: new Date().toISOString() };\n  res.json({ success: true, data: machines[index] });\n});\n\n// Work Orders routes\napp.get('/api/workorders', (req: Request, res: Response) => {\n  res.json({ success: true, data: workOrders });\n});\n\napp.get('/api/workorders/:id', (req: Request, res: Response) => {\n  const workOrder = workOrders.find(w => w.id === req.params.id);\n  if (!workOrder) {\n    return res.status(404).json({ success: false, error: 'Work order not found' });\n  }\n  res.json({ success: true, data: workOrder });\n});\n\napp.post('/api/workorders', (req: Request, res: Response) => {\n  const newWorkOrder = {\n    id: String(workOrders.length + 1),\n    orderNumber: `WO-2024-${String(workOrders.length + 1).padStart(3, '0')}`,\n    ...req.body,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  };\n  workOrders.push(newWorkOrder);\n  res.json({ success: true, data: newWorkOrder });\n});\n\napp.put('/api/workorders/:id', (req: Request, res: Response) => {\n  const index = workOrders.findIndex(w => w.id === req.params.id);\n  if (index === -1) {\n    return res.status(404).json({ success: false, error: 'Work order not found' });\n  }\n  workOrders[index] = { ...workOrders[index], ...req.body, updatedAt: new Date().toISOString() };\n  res.json({ success: true, data: workOrders[index] });\n});\n\n// Dashboard routes\napp.get('/api/dashboard/stats', (req: Request, res: Response) => {\n  const stats = {\n    totalMaterials: materials.length,\n    lowStockItems: materials.filter(m => m.currentStock <= m.minStock).length,\n    totalMachines: machines.length,\n    activeMachines: machines.filter(m => m.status === 'active').length,\n    pendingWorkOrders: workOrders.filter(w => w.status === 'PLANNED').length,\n    completedWorkOrders: workOrders.filter(w => w.status === 'COMPLETED').length\n  };\n  res.json({ success: true, data: stats });\n});\n\napp.get('/api/dashboard/critical-stock', (req: Request, res: Response) => {\n  const criticalStock = materials.filter(m => m.currentStock <= m.minStock);\n  res.json({ success: true, data: criticalStock });\n});\n\napp.get('/api/dashboard/recent-movements', (req: Request, res: Response) => {\n  const recentMovements = movements.slice(-10);\n  res.json({ success: true, data: recentMovements });\n});\n\napp.get('/api/dashboard/work-order-stats', (req: Request, res: Response) => {\n  const stats = {\n    pending: workOrders.filter(w => w.status === 'PLANNED').length,\n    inProgress: workOrders.filter(w => w.status === 'IN_PROGRESS').length,\n    completed: workOrders.filter(w => w.status === 'COMPLETED').length,\n    cancelled: workOrders.filter(w => w.status === 'CANCELLED').length\n  };\n  res.json({ success: true, data: stats });\n});\n\n// Admin routes\napp.post('/api/admin/backup', (req: Request, res: Response) => {\n  setTimeout(() => {\n    res.json({ success: true, message: 'Backup completed successfully' });\n  }, 2000);\n});\n\napp.post('/api/admin/optimize', (req: Request, res: Response) => {\n  setTimeout(() => {\n    res.json({ success: true, message: 'Database optimization completed' });\n  }, 3000);\n});\n\napp.post('/api/admin/clear-logs', (req: Request, res: Response) => {\n  setTimeout(() => {\n    res.json({ success: true, message: 'System logs cleared successfully' });\n  }, 1000);\n});\n\napp.post('/api/admin/restore', (req: Request, res: Response) => {\n  setTimeout(() => {\n    res.json({ success: true, message: 'Database restored successfully' });\n  }, 5000);\n});\n\n// Reports routes\napp.get('/api/reports/inventory', (req: Request, res: Response) => {\n  res.json({ success: true, data: materials });\n});\n\napp.get('/api/reports/movements', (req: Request, res: Response) => {\n  res.json({ success: true, data: movements });\n});\n\napp.get('/api/reports/machines', (req: Request, res: Response) => {\n  res.json({ success: true, data: machines });\n});\n\napp.get('/api/reports/workorders', (req: Request, res: Response) => {\n  res.json({ success: true, data: workOrders });\n});\n\n// Suppliers route\napp.get('/api/suppliers', (req: Request, res: Response) => {\n  const suppliers = [\n    { id: '1', name: 'Afyon Mermer A.Ş.', contact: 'info@afyonmermer.com' },\n    { id: '2', name: 'Makine Parça Ltd.', contact: 'satis@makineparca.com' }\n  ];\n  res.json({ success: true, data: suppliers });\n});\n\n// Health check\napp.get('/api/health', (req: Request, res: Response) => {\n  res.json({ success: true, message: 'ok' });\n});\n\n// Error handler\napp.use((error: Error, req: Request, res: Response, next: NextFunction) => {\n  res.status(500).json({\n    success: false,\n    error: 'Server internal error'\n  });\n});\n\n// 404 handler\napp.use((req: Request, res: Response) => {\n  res.status(404).json({\n    success: false,\n    error: 'API not found'\n  });\n});\n\n// Vercel handler\nexport default function handler(req: VercelRequest, res: VercelResponse) {\n  return app(req, res);\n}"]}